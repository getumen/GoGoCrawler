// Code generated by MockGen. DO NOT EDIT.
// Source: download_service.go

// Package service is a generated GoMock package.
package service

import (
	context "context"
	models "github.com/getumen/gogo_crawler/domains/models"
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
	sync "sync"
)

// MockDownloadService is a mock of DownloadService interface
type MockDownloadService struct {
	ctrl     *gomock.Controller
	recorder *MockDownloadServiceMockRecorder
}

// MockDownloadServiceMockRecorder is the mock recorder for MockDownloadService
type MockDownloadServiceMockRecorder struct {
	mock *MockDownloadService
}

// NewMockDownloadService creates a new mock instance
func NewMockDownloadService(ctrl *gomock.Controller) *MockDownloadService {
	mock := &MockDownloadService{ctrl: ctrl}
	mock.recorder = &MockDownloadServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDownloadService) EXPECT() *MockDownloadServiceMockRecorder {
	return m.recorder
}

// DoRequest mocks base method
func (m *MockDownloadService) DoRequest(ctx context.Context, in <-chan *models.Request, out chan<- *models.Response, wg *sync.WaitGroup) {
	m.ctrl.Call(m, "DoRequest", ctx, in, out, wg)
}

// DoRequest indicates an expected call of DoRequest
func (mr *MockDownloadServiceMockRecorder) DoRequest(ctx, in, out, wg interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoRequest", reflect.TypeOf((*MockDownloadService)(nil).DoRequest), ctx, in, out, wg)
}

// AddRequestMiddleware mocks base method
func (m *MockDownloadService) AddRequestMiddleware(f func(*http.Request, *models.Request) *http.Request) {
	m.ctrl.Call(m, "AddRequestMiddleware", f)
}

// AddRequestMiddleware indicates an expected call of AddRequestMiddleware
func (mr *MockDownloadServiceMockRecorder) AddRequestMiddleware(f interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRequestMiddleware", reflect.TypeOf((*MockDownloadService)(nil).AddRequestMiddleware), f)
}

// AddResponseMiddleware mocks base method
func (m *MockDownloadService) AddResponseMiddleware(f func(*http.Response, *models.Response) *models.Response) {
	m.ctrl.Call(m, "AddResponseMiddleware", f)
}

// AddResponseMiddleware indicates an expected call of AddResponseMiddleware
func (mr *MockDownloadServiceMockRecorder) AddResponseMiddleware(f interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddResponseMiddleware", reflect.TypeOf((*MockDownloadService)(nil).AddResponseMiddleware), f)
}
